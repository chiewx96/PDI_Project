<Window x:Class="PDI_Feather_Tracking_WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PDI_Feather_Tracking_WPF"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:converter="clr-namespace:PDI_Feather_Tracking_WPF.Converter"
        xmlns:view="clr-namespace:PDI_Feather_Tracking_WPF.View"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        mc:Ignorable="d" MaxHeight="800" MaxWidth="1600"
        Title="PDI Feather Tracking" KeyDown="Window_KeyDown">
    <Window.Resources>
        <converter:EmployeeNoConverter x:Key="EmployeeNoConverter"/>
        <converter:UserToVisibilityConverter x:Key="UserToVisibilityConverter"/>
        <converter:InverseUserToVisibilityConverter x:Key="InverseUserToVisibilityConverter"/>
        <converter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </Window.Resources>
    <Grid>
        <StackPanel>
            <materialDesign:DialogHost DialogTheme="Inherit"
                             Identifier="RootDialog">

                <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}"
                                           IsRightDrawerOpen="{Binding ElementName=LoggedInButton,Path=IsChecked}">
                    <materialDesign:DrawerHost.LeftDrawerContent>
                        <DockPanel MinWidth="220">
                            <ToggleButton Margin="16" HorizontalAlignment="Right" DockPanel.Dock="Top" 
                                          IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" 
                                          Style="{StaticResource MaterialDesignHamburgerToggleButton}" />
                            <ListBox x:Name="DemoItemsListBox" Margin="0,16,0,16" AutomationProperties.Name="DemoPagesListBox" DisplayMemberPath="Name"
                                     ItemsSource="{Binding MenuItems}" PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp" 
                                     SelectedIndex="{Binding SelectedIndex}" SelectedItem="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}">
                                <ListBox.Resources>
                                    <Style TargetType="ScrollBar" BasedOn="{StaticResource MaterialDesignScrollBarMinimal}" />
                                    <!--<Style TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesignNavigationPrimaryListBox}" />-->
                                </ListBox.Resources>
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MaterialDesignNavigationListBoxItem}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsVisible}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.ItemContainerStyle>

                                <!--<ListBox.ItemTemplate>
                                    <DataTemplate DataType="domain:DemoItem">
                                        <TextBlock Margin="24,4,0,4" AutomationProperties.AutomationId="DemoItemPage" 
                                                   Text="{Binding Name}" Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}" IsHitTestVisible="{Binding IsVisible}" IsEnabled="{Binding IsVisible}">
                                        </TextBlock>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>-->
                            </ListBox>
                        </DockPanel>
                    </materialDesign:DrawerHost.LeftDrawerContent>

                    <materialDesign:DrawerHost.RightDrawerContent>
                        <!--<ScrollViewer VerticalScrollBarVisibility="Auto">-->
                        <UniformGrid MinWidth="220" Columns="1" Rows="5" Margin="5">
                            <Button Command="{Binding ChangePassword}" Content="Change Password" Grid.Row="0"/>
                            <TextBlock Text="{Binding Message}" Style="{StaticResource MaterialDesignOverlineTextBlock}"/>
                            <TextBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"  
                                     Style="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"  
                                     Width="250"  FontSize="20" 
                                     HorizontalAlignment="Center" VerticalAlignment="Center" 
                                     Text="{Binding NewPassword, UpdateSourceTrigger=PropertyChanged}" 
                                     Visibility="{Binding ChangePasswordMode, Converter={StaticResource BooleanToVisibilityConverter}}"
                                     materialDesign:HintAssist.Hint="New Password"/>
                            <Button Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Top" 
                                    materialDesign:ButtonProgressAssist.IsIndicatorVisible="True" Width="200" Height="50" 
                                    Command="{Binding SaveChangedPassword}"
                                    Style="{StaticResource MaterialDesignOutlinedButton}"
                                    Visibility="{Binding ChangePasswordMode, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    Content="Save New Password"/>
                            <Button  Grid.Row="3" Command="{Binding Logout}" Content="Logout" PreviewMouseLeftButtonUp="RightDrawer_Hide"/>
                        </UniformGrid>
                        <!--</ScrollViewer>-->
                    </materialDesign:DrawerHost.RightDrawerContent>

                    <DockPanel>
                        <materialDesign:ColorZone Padding="16"
                                  materialDesign:ElevationAssist.Elevation="Dp4"
                                  DockPanel.Dock="Top"
                                  Mode="PrimaryMid">
                            <DockPanel>
                                <StackPanel Orientation="Horizontal">
                                    <ToggleButton x:Name="MenuToggleButton" 
                                                  AutomationProperties.Name="HamburgerToggleButton"
                                                  IsChecked="False"
                                                  Style="{StaticResource MaterialDesignHamburgerToggleButton}" />
                                </StackPanel>

                                <Button DockPanel.Dock="Right" Height="40"
                                        Command="{Binding ShowLogin}" 
                                        Style="{StaticResource MaterialDesignFlatSecondaryLightBgButton}"
                                        Visibility="{Binding CurrentUser, Converter={StaticResource InverseUserToVisibilityConverter}}"
                                        Background="White" Foreground="MediumPurple">
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Height="30" Width="30" VerticalAlignment="Center"  Kind="AccountCircle" Margin="0,0,10,0"/>
                                        <TextBlock Text="Login" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Button>

                                <ToggleButton DockPanel.Dock="Right" Height="40" IsChecked="False" x:Name="LoggedInButton"
                                              Style="{StaticResource MaterialDesignFlatSecondaryLightBgButton}"
                                              Visibility="{Binding CurrentUser, Converter={StaticResource UserToVisibilityConverter}}"
                                              Foreground="White" Background="MediumPurple">
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Height="30" Width="30" VerticalAlignment="Center"  Kind="AccountCircle" Margin="0,0,10,0"/>
                                        <TextBlock Text="{Binding CurrentUser, Converter={StaticResource EmployeeNoConverter}}" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </ToggleButton>

                                <Image Width="120" Height="90" Source="../logo.png" HorizontalAlignment="Center" VerticalAlignment="Center" />

                                <TextBlock Margin="-152,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                           FontSize="22" Text="PDI Feather Tracking" />
                            </DockPanel>
                        </materialDesign:ColorZone>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>


                            <ScrollViewer x:Name="MainScrollViewer" materialDesign:ScrollViewerAssist.IsAutoHideEnabled="True" 
                                          HorizontalScrollBarVisibility="{Binding SelectedItem.HorizontalScrollBarVisibilityRequirement, FallbackValue=Disabled}" 
                                          VerticalScrollBarVisibility="{Binding SelectedItem.VerticalScrollBarVisibilityRequirement, FallbackValue=Disabled}">
                                <ContentControl DataContext="{Binding SelectedItem}" Content="{Binding Content, UpdateSourceTrigger=PropertyChanged, FallbackValue={x:Null}}"
                                                DataContextChanged="OnSelectedItemChanged">
                                </ContentControl>
                            </ScrollViewer>

                            <view:Notification x:Name="MainSnackbar" VerticalAlignment="Bottom"/>
                        </Grid>
                    </DockPanel>
                </materialDesign:DrawerHost>
            </materialDesign:DialogHost>
        </StackPanel>
    </Grid>
</Window>
