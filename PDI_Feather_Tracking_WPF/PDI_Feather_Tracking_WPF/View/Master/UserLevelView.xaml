<UserControl x:Class="PDI_Feather_Tracking_WPF.View.UserLevelView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PDI_Feather_Tracking_WPF.View"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.25*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <!-- and here's another -->
        <DataGrid Grid.Row="1" AutoGenerateColumns="False" CanUserAddRows="False" HeadersVisibility="All" 
                  ItemsSource="{Binding UserLevels}" SelectedItem="{Binding SelectedUserLevel}" >
            <DataGrid.Columns>
                <DataGridTextColumn Header="Roles" Binding="{Binding Name}"
                                    ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"/>
            </DataGrid.Columns>
        </DataGrid>
        <!--<ListView Grid.Row="1" ItemsSource="{Binding UserLevels}" 
                  SelectedItem="{Binding SelectedUserLevel}" DisplayMemberPath="Name"/>-->


        <!--<ItemsControl Grid.Row="1" Grid.IsSharedSizeScope="True" ItemsSource="{Binding UserLevels}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Border x:Name="Border" Padding="8" 
                            BorderBrush="{DynamicResource MaterialDesignDivider}" BorderThickness="0,0,0,1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition SharedSizeGroup="Checkerz" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <ToggleButton VerticalAlignment="Center" Content="{Binding Code}"
                                          IsChecked="{Binding IsSelected}" Style="{StaticResource MaterialDesignActionLightToggleButton}" />
                            <StackPanel Grid.Column="1" Margin="8,0,0,0">
                                <TextBlock FontWeight="Bold" Text="{Binding Name}" />
                                <TextBlock Text="{Binding Description}" />
                            </StackPanel>
                        </Grid>
                    </Border>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>-->
        <StackPanel Grid.Column="2" Orientation="Horizontal">
            <Button Grid.Column="2" Margin="5" Content="Create" Command="{Binding CreateCommand}"/>
            <Button Grid.Column="2" Margin="5" Content="Delete" Command="{Binding DeleteCommand}"/>
            <Button Grid.Column="2" Margin="5" Content="Save" Command="{Binding SaveCommand}"/>
        </StackPanel>
        <DataGrid Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" AutoGenerateColumns="False" CanUserAddRows="True" HeadersVisibility="All" 
                  ItemsSource="{Binding ModuleAccess}">
            <DataGrid.Columns>

                <DataGridTextColumn Header="No" 
                                Binding="{Binding Module.Id}">
                </DataGridTextColumn>
                <!-- by default a DataGridTextColumn will have the MaterialDesignDataGridTextColumnStyle and MaterialDesignDataGridTextColumnEditingStyle applied. See DataGridAssist.ApplyMaterialDesignColumnStyles attached property -->
                <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->
                <materialDesign:DataGridTextColumn EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                                   ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}" Header="Name" Binding="{Binding Module.Name}">
                </materialDesign:DataGridTextColumn>

                <DataGridCheckBoxColumn Header="Accessible"
                                    Binding="{Binding Status, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
